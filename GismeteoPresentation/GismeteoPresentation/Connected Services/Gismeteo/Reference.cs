//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GismeteoPresentation.Gismeteo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/DataConnector.Models")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Forecast", Namespace="http://schemas.datacontract.org/2004/07/DataConnector.Models")]
    [System.SerializableAttribute()]
    public partial class Forecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureField, value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wind {
            get {
                return this.WindField;
            }
            set {
                if ((object.ReferenceEquals(this.WindField, value) != true)) {
                    this.WindField = value;
                    this.RaisePropertyChanged("Wind");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Gismeteo.IGismeteoService")]
    public interface IGismeteoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGismeteoService/GetCitiesList", ReplyAction="http://tempuri.org/IGismeteoService/GetCitiesListResponse")]
        GismeteoPresentation.Gismeteo.City[] GetCitiesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGismeteoService/GetCitiesList", ReplyAction="http://tempuri.org/IGismeteoService/GetCitiesListResponse")]
        System.Threading.Tasks.Task<GismeteoPresentation.Gismeteo.City[]> GetCitiesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGismeteoService/GetForecastBySity", ReplyAction="http://tempuri.org/IGismeteoService/GetForecastBySityResponse")]
        GismeteoPresentation.Gismeteo.Forecast[] GetForecastBySity(long cityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGismeteoService/GetForecastBySity", ReplyAction="http://tempuri.org/IGismeteoService/GetForecastBySityResponse")]
        System.Threading.Tasks.Task<GismeteoPresentation.Gismeteo.Forecast[]> GetForecastBySityAsync(long cityId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGismeteoServiceChannel : GismeteoPresentation.Gismeteo.IGismeteoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GismeteoServiceClient : System.ServiceModel.ClientBase<GismeteoPresentation.Gismeteo.IGismeteoService>, GismeteoPresentation.Gismeteo.IGismeteoService {
        
        public GismeteoServiceClient() {
        }
        
        public GismeteoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GismeteoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GismeteoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GismeteoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GismeteoPresentation.Gismeteo.City[] GetCitiesList() {
            return base.Channel.GetCitiesList();
        }
        
        public System.Threading.Tasks.Task<GismeteoPresentation.Gismeteo.City[]> GetCitiesListAsync() {
            return base.Channel.GetCitiesListAsync();
        }
        
        public GismeteoPresentation.Gismeteo.Forecast[] GetForecastBySity(long cityId) {
            return base.Channel.GetForecastBySity(cityId);
        }
        
        public System.Threading.Tasks.Task<GismeteoPresentation.Gismeteo.Forecast[]> GetForecastBySityAsync(long cityId) {
            return base.Channel.GetForecastBySityAsync(cityId);
        }
    }
}
